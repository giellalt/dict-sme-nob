
# Makefile to make smedict.fst
# the fst just recognises all lemmas in the smenob dictionary
# it does __not__ translate them.

# usage.
# make -f make-smedict

# pseudocode:

# read all lexicon files
# pick the lemmas
# save as smelemmalist.txt
# open xfst
# run command "read text < smelemmalist.txt"
# save result as smedict.fst
# the resulting fst to be used to test dict content


XFST = xfst

LEX = 	src/adjective_smenob.xml  \
	src/adverb_smenob.xml	  \
	src/nounActor_smenob.xml  \
	src/nounCommon_smenob.xml \
	src/nounG3_smenob.xml	  \
	src/nounProperPl_smenob.xml \
	src/nounProper_smenob.xml \
	src/other_smenob.xml	  \
	src/pronDem_smenob.xml	  \
	src/pronIndef_smenob.xml  \
	src/pronPers_smenob.xml	  \
	src/pronRec_smenob.xml	  \
	src/pronRefl_smenob.xml	  \
	src/propPl_smenob.xml	  \
	src/prop_smenob.xml	  \
	src/pronRel_smenob.xml	  \
	src/verbCop_smenob.xml	  \
	src/verbNeg_smenob.xml	  \
	src/verb_smenob.xml		  




smedict_a_tolerant.fst: bin/smedict_a_tolerant.fst
bin/smedict_a_tolerant.fst: bin/smedict.fst
	@echo
	@echo "*** Building  smedict_a_tolerant.fst ***"
	@echo
	@printf "read regex [ @\"$<\" .o. \
	[ รก (<-) a , ร (<-) A ]] ; \n\
	save stack $@ \n\
	quit \n" > ../tmp/smedict-tolerant-script
	@echo "*** Done script, at least. ***"
	$(XFST)  < ../tmp/smedict-tolerant-script
	@rm -f ../tmp/smedict-tolerant-script

smedict.fst: bin/smedict.fst
bin/smedict.fst: bin/smelemmalist.txt
	@echo
	@echo "*** Building  smedict.fst ***"
	@echo
	@printf "read text $< \n\
	save stack $@ \n\
	quit \n" > ../tmp/smedict-fst-script
	$(XFST)  < ../tmp/smedict-fst-script
	@rm -f ../tmp/smedict-fst-script

smelemmalist.txt: bin/smelemmalist.txt
bin/smelemmalist.txt: $(LEX)
	@cat $(LEX) | \
	grep '<l ' | \
	cut -d">" -f2 | \
	cut -d"<" -f1 > bin/smelemmalist.txt

clean:
	@rm -f bin/smelemmalist.txt bin/smedict.fst	
